var true = "true";
var false = "false";
var empty = "";

func not(self) {
    if self {
        return false;
    }
    return true;
}

func and(self, other) {
    if self {
        return other;
    }
    return false;
}

func or(self, other) {
    if self.eq(empty) {
        return empty;
    }
    if other.eq(empty) {
        return empty;
    }

    if self {
        return true;
    }
    if other {
        return true;
    }
    return false;
}

func last(self) {
    if self.eq(empty) {
        return empty;
    }

    if self.tail().eq(empty) {
        return self;
    }

    return self.tail().last();
}

func first(self) {
    if self.eq(empty) {
        return empty;
    }

    if self.head().eq(empty) {
        return self;
    }

    return self.head().first();
}

func len(self) {
    if self.eq(empty) {
        return "0";
    }

    return self.tail().len().inc();
}

func trim_num(self) {
    if self.len().eq("1") {
        return self;
    }

    // todo: remove previous if and add `.and(self.len().gt("1"))` here
    if self.first().eq("0") {
        return self.tail();
    }

    return self;
}

func inc(self) {
    if self.eq(empty) {
        return empty;
    }

    if self.last().eq("0") {
        return self.head().cat("1");
    }
    if self.last().eq("1") {
        return self.head().cat("2");
    }
    if self.last().eq("2") {
        return self.head().cat("3");
    }
    if self.last().eq("3") {
        return self.head().cat("4");
    }
    if self.last().eq("4") {
        return self.head().cat("5");
    }
    if self.last().eq("5") {
        return self.head().cat("6");
    }
    if self.last().eq("6") {
        return self.head().cat("7");
    }
    if self.last().eq("7") {
        return self.head().cat("8");
    }
    if self.last().eq("8") {
        return self.head().cat("9");
    }
    if self.last().eq("9") {
        if self.head().eq(empty) {
            return "10";
        }

        return self.head().inc().cat("0");
    }
}

func dec(self) {
    if self.eq(empty) {
        return empty;
    }

    if self.last().eq("9") {
        return self.head().cat("8");
    }
    if self.last().eq("8") {
        return self.head().cat("7");
    }
    if self.last().eq("7") {
        return self.head().cat("6");
    }
    if self.last().eq("6") {
        return self.head().cat("5");
    }
    if self.last().eq("5") {
        return self.head().cat("4");
    }
    if self.last().eq("4") {
        return self.head().cat("3");
    }
    if self.last().eq("3") {
        return self.head().cat("2");
    }
    if self.last().eq("2") {
        return self.head().cat("1");
    }
    if self.last().eq("1") {
        return self.head().cat("0");
    }
    if self.last().eq("0") {
        // todo: negative numbers
        return self.head().dec().cat("9").trim_num();
    }
}

func add(self, other) {
    if self.eq(empty).or(other.eq(empty)) {
        return empty;
    }

    if other.eq("0") {
        return self;
    }

    return self.inc().add(other.dec());
}

func sub(self, other) {
    if self.eq(empty).or(other.eq(empty)) {
        return empty;
    }

    if other.eq("0") {
        return self;
    }

    return self.dec().sub(other.dec());
}

func skip(self, amount) {
    if self.eq(empty).or(amount.eq(empty)) {
        return empty;
    }

    if amount.eq("0") {
        return self;
    }

    return self.tail().skip(amount.dec());
}

func take(self, amount) {
    if self.eq(empty).or(amount.eq(empty)) {
        return empty;
    }

    if amount.eq("0") {
        return empty;
    }

    return self.first().cat(self.tail().take(amount.dec()));
}

func repeat(self, times) {
    if times.eq(empty) {
        return empty;
    }

    if times.eq("0") {
        return empty;
    }

    return self.cat(self.repeat(times.dec()));
}

"15".sub("13").cat(".. ").repeat("5").skip("4").take("3").print();
